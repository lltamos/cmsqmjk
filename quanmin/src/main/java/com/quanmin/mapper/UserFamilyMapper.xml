<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.quanmin.dao.mapper.UserFamilyMapper">
	<resultMap id="BaseResultMap" type="com.quanmin.model.UserFamily" >
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="user_id" property="userId" jdbcType="INTEGER" />
		<result column="family_id" property="familyId" jdbcType="INTEGER" />
		<result column="appellation" property="appellation" jdbcType="VARCHAR" />
		<result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
		<result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
		<result column="check_green" property="checkGreen" jdbcType="INTEGER" />
		<result column="are_there_report" property="areThereReport" jdbcType="INTEGER" />
	</resultMap>
	<!-- 查询家庭信息 -->
	<resultMap id="FamilyInfoResultMap" type="com.quanmin.model.custom.FamilyInfo">
		<result column="userId" property="userId" jdbcType="INTEGER" />
		<result column="familyId" property="familyId" jdbcType="INTEGER" />
		<result column="name" property="name" jdbcType="VARCHAR" />
		<result column="age" property="age" jdbcType="INTEGER" />
		<result column="area" property="area" jdbcType="VARCHAR" />
		<result column="idNo" property="idNo" jdbcType="VARCHAR" />
		<result column="checkGreen" property="checkGreen" jdbcType="VARCHAR" />
		<result column="areThereReport" property="areThereReport" jdbcType="VARCHAR" />
		<result column="phone" property="phone" jdbcType="VARCHAR" />
		<result column="appellation" property="appellation" jdbcType="VARCHAR" />
		<result column="createTime" property="createTime" jdbcType="TIMESTAMP" />
		<result column="updateTime" property="updateTime" jdbcType="TIMESTAMP" />
	</resultMap>
	<sql id="Example_Where_Clause" >
		<where >
			<foreach collection="oredCriteria" item="criteria" separator="or" >
				<if test="criteria.valid" >
					<trim prefix="(" suffix=")" prefixOverrides="and" >
						<foreach collection="criteria.criteria" item="criterion" >
							<choose >
								<when test="criterion.noValue" >
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue" >
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue" >
									and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
								</when>
								<when test="criterion.listValue" >
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause" >
		<where >
			<foreach collection="example.oredCriteria" item="criteria" separator="or" >
				<if test="criteria.valid" >
					<trim prefix="(" suffix=")" prefixOverrides="and" >
						<foreach collection="criteria.criteria" item="criterion" >
							<choose >
								<when test="criterion.noValue" >
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue" >
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue" >
									and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
								</when>
								<when test="criterion.listValue" >
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List" >
		id, user_id, family_id, appellation, create_time, update_time, check_green, are_there_report
	</sql>
	<select id="selectByExample" resultMap="BaseResultMap" parameterType="com.quanmin.model.UserFamilyExample" >
		select
		<if test="distinct" >
			distinct
		</if>
		<include refid="Base_Column_List" />
		from t_user_family
		<if test="_parameter != null" >
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null" >
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
		select
		<include refid="Base_Column_List" />
		from t_user_family
		where id = #{id,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
		delete from t_user_family
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<delete id="deleteByExample" parameterType="com.quanmin.model.UserFamilyExample" >
		delete from t_user_family
		<if test="_parameter != null" >
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="com.quanmin.model.UserFamily"  useGeneratedKeys="true"
			keyProperty="id"  >
		insert into t_user_family (id, user_id, family_id,
		appellation, create_time, update_time,
		check_green, are_there_report)
		values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{familyId,jdbcType=INTEGER},
		#{appellation,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP},
		#{checkGreen,jdbcType=INTEGER}, #{areThereReport,jdbcType=INTEGER})
	</insert>
	<insert id="insertSelective" parameterType="com.quanmin.model.UserFamily"  useGeneratedKeys="true" keyProperty="id"  >
		insert into t_user_family
		<trim prefix="(" suffix=")" suffixOverrides="," >
			<if test="id != null" >
				id,
			</if>
			<if test="userId != null" >
				user_id,
			</if>
			<if test="familyId != null" >
				family_id,
			</if>
			<if test="appellation != null" >
				appellation,
			</if>
			<if test="createTime != null" >
				create_time,
			</if>
			<if test="updateTime != null" >
				update_time,
			</if>
			<if test="checkGreen != null" >
				check_green,
			</if>
			<if test="areThereReport != null" >
				are_there_report,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides="," >
			<if test="id != null" >
				#{id,jdbcType=INTEGER},
			</if>
			<if test="userId != null" >
				#{userId,jdbcType=INTEGER},
			</if>
			<if test="familyId != null" >
				#{familyId,jdbcType=INTEGER},
			</if>
			<if test="appellation != null" >
				#{appellation,jdbcType=VARCHAR},
			</if>
			<if test="createTime != null" >
				#{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="updateTime != null" >
				#{updateTime,jdbcType=TIMESTAMP},
			</if>
			<if test="checkGreen != null" >
				#{checkGreen,jdbcType=INTEGER},
			</if>
			<if test="areThereReport != null" >
				#{areThereReport,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<select id="countByExample" parameterType="com.quanmin.model.UserFamilyExample" resultType="java.lang.Integer" >
		select count(*) from t_user_family
		<if test="_parameter != null" >
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map" >
		update t_user_family
		<set >
			<if test="record.id != null" >
				id = #{record.id,jdbcType=INTEGER},
			</if>
			<if test="record.userId != null" >
				user_id = #{record.userId,jdbcType=INTEGER},
			</if>
			<if test="record.familyId != null" >
				family_id = #{record.familyId,jdbcType=INTEGER},
			</if>
			<if test="record.appellation != null" >
				appellation = #{record.appellation,jdbcType=VARCHAR},
			</if>
			<if test="record.createTime != null" >
				create_time = #{record.createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="record.updateTime != null" >
				update_time = #{record.updateTime,jdbcType=TIMESTAMP},
			</if>
			<if test="record.checkGreen != null" >
				check_green = #{record.checkGreen,jdbcType=INTEGER},
			</if>
			<if test="record.areThereReport != null" >
				are_there_report = #{record.areThereReport,jdbcType=INTEGER},
			</if>
		</set>
		<if test="_parameter != null" >
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map" >
		update t_user_family
		set id = #{record.id,jdbcType=INTEGER},
		user_id = #{record.userId,jdbcType=INTEGER},
		family_id = #{record.familyId,jdbcType=INTEGER},
		appellation = #{record.appellation,jdbcType=VARCHAR},
		create_time = #{record.createTime,jdbcType=TIMESTAMP},
		update_time = #{record.updateTime,jdbcType=TIMESTAMP},
		check_green = #{record.checkGreen,jdbcType=INTEGER},
		are_there_report = #{record.areThereReport,jdbcType=INTEGER}
		<if test="_parameter != null" >
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="com.quanmin.model.UserFamily" >
		update t_user_family
		<set >
			<if test="userId != null" >
				user_id = #{userId,jdbcType=INTEGER},
			</if>
			<if test="familyId != null" >
				family_id = #{familyId,jdbcType=INTEGER},
			</if>
			<if test="appellation != null" >
				appellation = #{appellation,jdbcType=VARCHAR},
			</if>
			<if test="createTime != null" >
				create_time = #{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="updateTime != null" >
				update_time = #{updateTime,jdbcType=TIMESTAMP},
			</if>
			<if test="checkGreen != null" >
				check_green = #{checkGreen,jdbcType=INTEGER},
			</if>
			<if test="areThereReport != null" >
				are_there_report = #{areThereReport,jdbcType=INTEGER},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.quanmin.model.UserFamily" >
		update t_user_family
		set user_id = #{userId,jdbcType=INTEGER},
		family_id = #{familyId,jdbcType=INTEGER},
		appellation = #{appellation,jdbcType=VARCHAR},
		create_time = #{createTime,jdbcType=TIMESTAMP},
		update_time = #{updateTime,jdbcType=TIMESTAMP},
		check_green = #{checkGreen,jdbcType=INTEGER},
		are_there_report = #{areThereReport,jdbcType=INTEGER}
		where id = #{id,jdbcType=INTEGER}
	</update>

	<!-- 查询家庭信息 -->
	<select id="selectFamilyInfoByUserId" resultMap="FamilyInfoResultMap"
		parameterType="java.lang.Integer">
		SELECT
		tuf.appellation AS appellation,
		tuf.family_id AS
		familyId,
		tf.`name` AS NAME,
		tf.age AS age,
		tf.area AS area,
		tf.phone AS
		phone,
		tf.id_no as idNo,
		tuf.check_green as checkGreen,
		tuf.are_there_report as areThereReport,
		tuf.user_id AS userId,
		tf.create_time AS createTime,
		tf.update_time AS updateTime
		FROM
		t_user_family tuf
		LEFT OUTER JOIN
		t_family tf ON tf.id = tuf.family_id
		WHERE tuf.user_id
		=#{userId,jdbcType=INTEGER}
	</select>

	<!-- 查询家庭信息 -->
	<select id="showFamilyListByUserId" resultMap="FamilyInfoResultMap"
		parameterType="java.lang.Integer">
		SELECT
		tuf.appellation AS appellation,
		tuf.family_id AS
		familyId,
		tf.`name` AS NAME,
		tf.age AS age,
		tf.area AS area,
		tf.phone AS
		phone,
		tf.id_no as idNo,
		tuf.check_green as checkGreen,
		tuf.are_there_report as areThereReport,
		tuf.user_id AS userId,
		tf.create_time AS createTime,
		tf.update_time AS updateTime
		FROM
		t_user_family tuf
		LEFT OUTER JOIN
		t_family tf ON tf.id = tuf.family_id
		WHERE tuf.user_id
		=#{userId,jdbcType=INTEGER}
	</select>

</mapper>