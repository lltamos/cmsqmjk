<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.quanmin.dao.mapper.LabelInformationMapper">
	<resultMap id="BaseResultMap" type="com.quanmin.model.LabelInformation">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="label_id" property="labelId" jdbcType="INTEGER" />
		<result column="information_id" property="informationId"
			jdbcType="INTEGER" />
		<result column="featured" property="featured" jdbcType="VARCHAR" />
		<result column="popular" property="popular" jdbcType="VARCHAR" />
		<result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
		<result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		id, label_id, information_id, featured, popular, create_time, update_time
	</sql>
	<select id="selectByExample" resultMap="BaseResultMap"
		parameterType="com.quanmin.model.LabelInformationExample">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from t_label_information
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from t_label_information
		where id = #{id,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from t_label_information
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<delete id="deleteByExample" parameterType="com.quanmin.model.LabelInformationExample">
		delete from t_label_information
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="com.quanmin.model.LabelInformation">
		insert into t_label_information (id, label_id, information_id,
		featured, popular, create_time,
		update_time)
		values (#{id,jdbcType=INTEGER}, #{labelId,jdbcType=INTEGER},
		#{informationId,jdbcType=INTEGER},
		#{featured,jdbcType=VARCHAR}, #{popular,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP},
		#{updateTime,jdbcType=TIMESTAMP})
	</insert>
	<insert id="insertSelective" useGeneratedKeys="true"
		keyProperty="id" parameterType="com.quanmin.model.LabelInformation">
		insert into t_label_information
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="labelId != null">
				label_id,
			</if>
			<if test="informationId != null">
				information_id,
			</if>
			<if test="featured != null">
				featured,
			</if>
			<if test="popular != null">
				popular,
			</if>
			<if test="createTime != null">
				create_time,
			</if>
			<if test="updateTime != null">
				update_time,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="labelId != null">
				#{labelId,jdbcType=INTEGER},
			</if>
			<if test="informationId != null">
				#{informationId,jdbcType=INTEGER},
			</if>
			<if test="featured != null">
				#{featured,jdbcType=VARCHAR},
			</if>
			<if test="popular != null">
				#{popular,jdbcType=VARCHAR},
			</if>
			<if test="createTime != null">
				#{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="updateTime != null">
				#{updateTime,jdbcType=TIMESTAMP},
			</if>
		</trim>
	</insert>
	<select id="countByExample" parameterType="com.quanmin.model.LabelInformationExample"
		resultType="java.lang.Integer">
		select count(*) from t_label_information
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update t_label_information
		<set>
			<if test="record.id != null">
				id = #{record.id,jdbcType=INTEGER},
			</if>
			<if test="record.labelId != null">
				label_id = #{record.labelId,jdbcType=INTEGER},
			</if>
			<if test="record.informationId != null">
				information_id = #{record.informationId,jdbcType=INTEGER},
			</if>
			<if test="record.featured != null">
				featured = #{record.featured,jdbcType=VARCHAR},
			</if>
			<if test="record.popular != null">
				popular = #{record.popular,jdbcType=VARCHAR},
			</if>
			<if test="record.createTime != null">
				create_time = #{record.createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="record.updateTime != null">
				update_time = #{record.updateTime,jdbcType=TIMESTAMP},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update t_label_information
		set id = #{record.id,jdbcType=INTEGER},
		label_id = #{record.labelId,jdbcType=INTEGER},
		information_id = #{record.informationId,jdbcType=INTEGER},
		featured = #{record.featured,jdbcType=VARCHAR},
		popular = #{record.popular,jdbcType=VARCHAR},
		create_time = #{record.createTime,jdbcType=TIMESTAMP},
		update_time = #{record.updateTime,jdbcType=TIMESTAMP}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="com.quanmin.model.LabelInformation">
		update t_label_information
		<set>
			<if test="labelId != null">
				label_id = #{labelId,jdbcType=INTEGER},
			</if>
			<if test="informationId != null">
				information_id = #{informationId,jdbcType=INTEGER},
			</if>
			<if test="featured != null">
				featured = #{featured,jdbcType=VARCHAR},
			</if>
			<if test="popular != null">
				popular = #{popular,jdbcType=VARCHAR},
			</if>
			<if test="createTime != null">
				create_time = #{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="updateTime != null">
				update_time = #{updateTime,jdbcType=TIMESTAMP},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.quanmin.model.LabelInformation">
		update t_label_information
		set label_id = #{labelId,jdbcType=INTEGER},
		information_id = #{informationId,jdbcType=INTEGER},
		featured = #{featured,jdbcType=VARCHAR},
		popular = #{popular,jdbcType=VARCHAR},
		create_time = #{createTime,jdbcType=TIMESTAMP},
		update_time = #{updateTime,jdbcType=TIMESTAMP}
		where id = #{id,jdbcType=INTEGER}
	</update>
</mapper>